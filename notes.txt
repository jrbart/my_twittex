Neel Vinoth
8:40 AM
1) Get Tweek changeset in the Feed Context
Neel Vinoth
8:41 AM
2) On Profile page, load the empty Tweek changeset to generate a HTML
Neel Vinoth
8:43 AM
3) Create a form template to type tweek and submit it
Neel Vinoth
8:45 AM
4) Limit the tweek submisson feature to the current logged in user
5) on_mount
Neel Vinoth
8:46 AM
use it from user_auth
ptp-asqb-zew


Tweek schema change:
Adding validation in the schema changeset for content length of max 256 characters
Template changes:
Form field is enhanced with phx- attributes for validation and submission
Button is updated with new attribute to prevent duplicate submission and look for correct type
LV module changes:
Add handle function for  submission and validation event
handle submission logic / 1. event 2. params 3. socket
    submit the tweek for a user
    look at the error message and extract the interested params
    get the current user from socket assigns
    use context function to create tweek
        handle success case
            Prepend the tweek to list of tweeks available in socket assigns
            create new intake form for content (to html)
        handle error case
            error and changeset
            display the user with changeset message in html form
        return with status tuple with noreply and success(socket)/ error(socket)
handle validate logic/3
    validate the tweek content using context function
    return the result to html form
    assign results in the form key in html format
Troubleshoot the error
    include the user details after the success tweek creation
    hint - user loaded after insertion


File Uploads:
Mapping the image to Profile:
# Placeholder to store the images in the server
* The images are not required to be stored in repo. So ignore the folder from committing
Whitelist the namespace/placeholder in the application
Add/map Avatars to users
- Generate migration
- Update the user schema
- Changeset to validate avatar for user
- Accounts context to support updating user avatars


Adding Avatar section to Settings page
    - Create a new LV template for Avatar Upload live
    - Updating socket with current user
    - define accept specification(2Mb, jpg/ jpeg/png, max entries of 1) for avatar image when mounting
    - form with validate and save
        - render reactive elements including preview
        - upload file feature(live_file_upload)
    - add handle event to support validate
    - add handle event to save the file upload using consume uploaded entries function
Update setting page to render avatar template (live render)
Use error handing function component in the Avatar template (upload error - Core Components (reference))
    .error - refer Core Components
Reference:
https://hexdocs.pm/phoenix_live_view/uploads.html (edited) 

FOLLOWS
Create data
Include faker dependency
Make seed file
Add some users
To register user, we need to provide username/ email id /password
Use Account.register_user API
Update the avatar for the users
https://phoenixonrails.com/images/avatars/mark.png
https://phoenixonrails.com/images/avatars/bill.png
https://phoenixonrails.com/images/avatars/elon.png
https://phoenixonrails.com/images/avatars/jeff.png
Insert 100 random tweeks
Fake content
random user picked from added users
Inserted at timeline for each tweek in random time is last 30 days
Run the seed
The ‘Follows’ schema
Feed.Follow / follows / follower_id and followed_id
Migration
Updated with change in on_delete and null false
Add unique index with including follower and followed id
Migrate
Schema
Follow schema
Add relationship with user schema
Include proper cast and unique constraints
User schema
Add relationship with Follow schema
Updating the Feed context

